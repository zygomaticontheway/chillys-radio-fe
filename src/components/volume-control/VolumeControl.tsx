import React, { useRef, useState } from 'react';
import './volumeControl.css'; // CSS –¥–ª—è —Å—Ç–∏–ª–µ–π

interface VolumeControlProps {
  onVolumeChange: (volume: number) => void; // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
}

const VolumeControl: React.FC<VolumeControlProps> = ({ onVolumeChange }) => {
  const [volume, setVolume] = useState(1); // –ì—Ä–æ–º–∫–æ—Å—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100% (1.0)
  const volumeRef = useRef<HTMLInputElement | null>(null); // –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–ª–∑—É–Ω–æ–∫

  // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏
  const handleVolumeChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const newVolume = parseFloat(e.target.value);
    setVolume(newVolume);
    onVolumeChange(newVolume); // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –∞—É–¥–∏–æ
  };

  return (
    <div className="volume-control">
      <div className="volume-icon">
        üîä
      </div>
      {/* –ü–æ–ª–æ—Å–∫–∞ —Å –ø–æ–ª–∑—É–Ω–∫–æ–º –≥—Ä–æ–º–∫–æ—Å—Ç–∏ */}
      <div className="volume-slider">
        <input
          ref={volumeRef}
          type="range"
          min="0"
          max="1"
          step="0.01"
          value={volume}
          onChange={handleVolumeChange}
          className="slider"
          aria-label="Volume"
        />
      </div>
    </div>
  );
};

export default VolumeControl;
